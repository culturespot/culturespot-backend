name: Build

on:
  push:
    branches:
      - dev
      - 'feature/*'
  pull_request:
    branches:
      - devg
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: ▶️ Checkout Repository
        uses: actions/checkout@v4

      # JDK 17 설정
      - name: ▶️ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      # Gradle 설정
      - name: ▶️ Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      # Gradle 빌드
      - name: ▶️ Build with Gradle
        env:
          # AWS
          DEV_AWS_ACCESS_KEY: "${{ secrets.DEV_AWS_ACCESS_KEY }}"
          DEV_AWS_REGION: "${{ secrets.DEV_AWS_REGION }}"
          DEV_AWS_SECRET_KEY: "${{ secrets.DEV_AWS_SECRET_KEY }}"

          # Docker
          DEV_DOCKER_SPRING_DATASOURCE_PASSWORD: "${{ secrets.DEV_DOCKER_SPRING_DATASOURCE_PASSWORD }}"
          DEV_DOCKER_SPRING_DATASOURCE_URL: "${{ secrets.DEV_DOCKER_SPRING_DATASOURCE_URL }}"
          DEV_DOCKER_SPRING_DATASOURCE_USERNAME: "${{ secrets.DEV_DOCKER_SPRING_DATASOURCE_USERNAME }}"

          # S3
          DEV_S3_BUCKET_NAME: "${{ secrets.DEV_S3_BUCKET_NAME }}"

          # Auth
          GOOGLE_CLIENT_ID: "${{ secrets.GOOGLE_CLIENT_ID }}"
          GOOGLE_CLIENT_SECRET: "${{ secrets.GOOGLE_CLIENT_SECRET }}"
          JWT_PRIVATE_KEY: "${{ secrets.JWT_PRIVATE_KEY }}"
          JWT_PUBLIC_KEY: "${{ secrets.JWT_PUBLIC_KEY }}"

          MINIO_ACCESS_KEY: "${{ secrets.MINIO_ACCESS_KEY }}"
          MINIO_BUCKET_NAME: "${{ secrets.MINIO_BUCKET_NAME }}"
          MINIO_ENDPOINT: "${{ secrets.MINIO_ENDPOINT }}"
          MINIO_SECRET_KEY: "${{ secrets.MINIO_SECRET_KEY }}"
          MYSQL_INIT_DML_SQL_PATH: "${{ secrets.MYSQL_INIT_DML_SQL_PATH }}"
        run: |
          ./gradlew clean 
          ./gradlew build --parallel -x test

      - name: ▶️ Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: ▶️ Build Docker image for batch module
        run: docker build -t ghcr.io/${{ github.repository }}/batch:latest -f ./CultureSpot-Batch/Dockerfile .

      - name: ▶️ Push Docker image for batch module
        run: docker push ghcr.io/${{ github.repository }}/batch:latest

      - name: ▶️ Build Docker image for api module
        run: docker build -t ghcr.io/${{ github.repository }}/api:latest -f ./CultureSpot-ServiceApi/Dockerfile .

      - name: ▶️ Push Docker image for api module
        run: docker push ghcr.io/${{ github.repository }}/api:latest